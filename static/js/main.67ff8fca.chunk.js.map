{"version":3,"sources":["logo.svg","Components/ResultPanel.js","Components/Avatar.js","Components/SearchBar.js","Components/Header.js","Components/Jobs/JobsPanel.js","Components/Jobs/JobsSearch.js","Components/Jobs.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ResultPanel","state","url","zip","copyToClipboard","data","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","toast","success","_this2","this","react_default","a","mdbreact","title","href","props","dLink","target","rel","name","icon","className","style","color","onClick","clone_url","size","branch","description","lang","forks","Component","Avatar","avatar","src","avatar_url","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","userName","value","onKeyDown","keyCode","shiftKey","preventDefault","handleSubmit","console","log","searchButton","getData","push","axios","get","Promise","all","then","result","reposData","userData","catch","error","response","status","warn","label","onChange","group","type","Components_Avatar","SearchBar_PanelBoard","hideProgressBar","newestOnTop","autoClose","PanelBoard","repos","map","repo","Components_ResultPanel","id","key","language","forks_count","default_branch","html_url","Header","logo","alt","Link","to","JobsPanel","company","location","moment","created","format","JobsSearch","search","adapter","jsonpAdapter","headers","Access-Control-Allow-Origin","jobsData","JobsSearch_PanelBoard","jobs","job","Jobs_JobsPanel","created_at","Jobs","JobsSearch_JobsSearch","App","BrowserRouter","Components_Header","Route","exact","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","getElementById","URL","process","origin","addEventListener","concat","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.67ff8fca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nimport { Button, Card, CardBody, CardTitle, CardText, toast, Fa } from 'mdbreact';\r\n\r\nclass ResultPanel extends Component {\r\n    state = {\r\n        url: '/archive/',\r\n        zip: '.zip'\r\n    }\r\n    copyToClipboard = (data) => {\r\n        let textField = document.createElement('textarea')\r\n        textField.innerText = data;\r\n        document.body.appendChild(textField)\r\n        textField.select()\r\n        document.execCommand('copy')\r\n        textField.remove()\r\n        // alert('Copied to Clipboard');\r\n        toast.success('URL copied to clipboard!');\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Card>\r\n                    <CardBody>\r\n                        <CardTitle>\r\n                            <a \r\n                            title=\"View on Github\" \r\n                            href={this.props.dLink} target=\"_blank\" rel=\"noopener noreferrer\"> {this.props.name} <span><Fa icon=\"github\" title=\"View on Github\"/></span>\r\n                            </a>  \r\n                            {/* <Button color=\"primary pull-right\">Copy clone link</Button>  */}\r\n                            {/* <span className=\"pull-right\" ><Fa title=\"Download as zip\" icon=\"download\" href={this.props.dLink + this.state.url + this.props.branch + this.state.zip } /></span> */}\r\n                            \r\n                            <span className=\"pull-left\" ><Fa style={{ color: '#0062cc' }} title=\"Copy Clone link\" icon=\"file\" onClick={() => this.copyToClipboard(this.props.clone_url)} /></span>\r\n\r\n                            <Button title=\"Download as zip\" size=\"sm\" color=\"primary pull-right\" href={this.props.dLink + this.state.url + this.props.branch + this.state.zip }><Fa title=\"Download as zip\" icon=\"download\" /></Button> \r\n                            \r\n                        </CardTitle>\r\n                        <CardText>{this.props.description}</CardText>\r\n                        <CardText><span className=\"pull-left\">Language: {this.props.lang} </span></CardText>\r\n                        <CardText><span className=\"pull-right\">Forks: {this.props.forks} </span></CardText>\r\n                       \r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default ResultPanel;","import React, { Component } from 'react';\r\n\r\nclass Avatar extends Component {\r\n    render() {\r\n        const avatar= this.props.data ? this.props.data : null;\r\n\r\n        return (\r\n            avatar && \r\n            <div>\r\n                <img className=\"gitAvatar\" src={avatar.avatar_url} />\r\n                <div><strong>{avatar.name}</strong></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Avatar;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ResultPanel from './ResultPanel';\r\nimport Avatar from './Avatar';\r\n\r\nimport { Button, Input, Fa, ToastContainer, toast } from 'mdbreact';\r\n\r\nexport default class SearchBar extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            userName: '',\r\n            reposData: [],\r\n            userData: [],\r\n            searchButton: 'Search',\r\n        }\r\n\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            userName: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    onKeyDown = (e) => {\r\n        if (e.keyCode === 13 && e.shiftKey === false) {\r\n          e.preventDefault();\r\n          this.handleSubmit();\r\n        }\r\n      }\r\n\r\n    handleSubmit = (e) => {\r\n        console.log(\"Submitted\");\r\n        if(this.state.userName === ''){\r\n            toast.warn('Please enter a username');\r\n            return;\r\n        }\r\n        this.setState({\r\n            searchButton: 'Searching...'\r\n        });\r\n\r\n        let getData = [];\r\n        getData.push(axios.get('https://api.github.com/users/'+this.state.userName+'/repos'));\r\n        getData.push(axios.get('https://api.github.com/users/'+this.state.userName));\r\n\r\n        Promise.all(getData)\r\n        .then(result=>{\r\n            this.setState({\r\n                reposData: result[0].data,\r\n                userData: result[1].data,\r\n                searchButton: 'Search'\r\n            });\r\n            console.log(this.state)\r\n        }).catch(error=>{\r\n            if(error.response){\r\n                if(error.response.status === 404) {\r\n                    toast.warn('Username not found');\r\n                    this.setState({\r\n                        reposData: [],\r\n                        userData: [],\r\n                        searchButton: 'Search'\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Input label=\"Type any Github Username\"  onKeyDown={this.onKeyDown} onChange={this.handleChange} group type=\"text\" />\r\n                {/* <Input label=\"Type your password\" icon=\"lock\" group type=\"password\" /> */}\r\n\r\n                <Button color=\"danger\" onClick={this.handleSubmit} >{this.state.searchButton} <Fa icon=\"search\" /></Button>\r\n\r\n                <Avatar\r\n                    data={this.state.userData}\r\n                />\r\n                <PanelBoard\r\n                    data={this.state.reposData}\r\n                />\r\n                <ToastContainer\r\n                    hideProgressBar={true}\r\n                    newestOnTop={true}\r\n                    autoClose={3000}\r\n                />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nclass PanelBoard extends Component {\r\n\r\n    render(){\r\n        const repos = this.props.data.map((repo) => (\r\n\r\n            <ResultPanel\r\n              id={repo.id}\r\n              key={repo.id}\r\n              name={repo.name}\r\n              description={repo.description}\r\n              lang={repo.language}\r\n              forks={repo.forks_count}\r\n              clone_url={repo.clone_url}\r\n              branch={repo.default_branch}\r\n              dLink={repo.html_url}\r\n            />\r\n            // console.log(repo.name)\r\n          ));\r\n\r\n          return(\r\n                <div>\r\n                    {repos}\r\n                </div>\r\n          );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport logo from '../logo.svg';\r\n\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    render(){\r\n        return(\r\n        <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <h1 className=\"App-title\">\r\n                <Link to=\"/react-github/\">\r\n                    <span style={{color: \"white\"}} className=\"pull-left\" >Home</span>\r\n                </Link>\r\n                 Welcome to Github App\r\n                 \r\n                <Link to=\"/react-github/jobs/\">\r\n                    <span style={{color: \"white\"}} className=\"pull-right\" >Jobs</span>\r\n                </Link>\r\n            </h1>\r\n            \r\n        </header>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport moment from 'moment'\r\n\r\nimport { Card, CardBody, CardTitle, CardText, Fa } from 'mdbreact';\r\n\r\nclass JobsPanel extends Component {\r\n\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                <Card>\r\n                    <CardBody>\r\n                        <CardTitle className=\"pull-left\">\r\n                            <a href={this.props.url}\r\n                            title=\"View on Github\" target=\"_blank\" rel=\"noopener noreferrer\"> {this.props.title} <span><Fa icon=\"github\" title=\"View on Github\"/></span>\r\n                            </a>\r\n                            <CardText>\r\n                                <span style={{color: \"purple\"}} className=\"pull-left\">{this.props.company}</span>\r\n                            </CardText>\r\n                        </CardTitle>\r\n                        <CardText>\r\n                            <span className=\"pull-right font-weight-bold\"><Fa icon=\"location\" />{this.props.type}</span>\r\n                        </CardText>\r\n                        <CardText>\r\n                            <span className=\"pull-right\"><Fa icon=\"location\" />{this.props.location}</span>\r\n                        </CardText>\r\n\r\n                        <CardText>\r\n                            <span className=\"pull-right\">Posted:{moment(this.props.created).format('MMM D, YYYY')} &nbsp;</span>\r\n                        </CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default JobsPanel;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport jsonpAdapter from 'axios-jsonp';\r\nimport JobsPanel from './JobsPanel';\r\n\r\nimport { Button, Input, Fa, ToastContainer, toast } from 'mdbreact';\r\n\r\nexport default class JobsSearch extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            search: '',\r\n            location: '',\r\n            jobsData: [],\r\n            searchButton: 'Search Job',\r\n        }\r\n\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            search: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    onKeyDown = (e) => {\r\n        if (e.keyCode === 13 && e.shiftKey === false) {\r\n          e.preventDefault();\r\n          this.handleSubmit();\r\n        }\r\n      }\r\n\r\n    handleSubmit = (e) => {\r\n        console.log(\"Submitted\");\r\n        if(this.state.search === '' && this.state.location === ''){\r\n            toast.warn('Please enter any query');\r\n            return;\r\n        }\r\n        this.setState({\r\n            searchButton: 'Searching...'\r\n        });\r\n\r\n        let getData = [];\r\n        axios.get('https://jobs.github.com/positions.json?description='+this.state.search, {\r\n            // to allow CORS in the client side\r\n            adapter: jsonpAdapter,\r\n            headers: {\"Access-Control-Allow-Origin\": 'https://jobs.github.com'}\r\n        }).then(result=> {\r\n            this.setState({\r\n                jobsData: result.data,\r\n                searchButton: 'Search Job'\r\n            });\r\n        }).catch(error=>{\r\n            if(error.response){\r\n                if(error.response.status === 404) {\r\n                    toast.warn('Jobs not found');\r\n                    this.setState({\r\n                        jobsData: [],\r\n                        searchButton: 'Search'\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Input label=\"Type any language name\"  onKeyDown={this.onKeyDown} onChange={this.handleChange} group type=\"text\" />\r\n                {/* <Input label=\"Type your password\" icon=\"lock\" group type=\"password\" /> */}\r\n\r\n                <Button color=\"danger\" onClick={this.handleSubmit} >{this.state.searchButton} <Fa icon=\"search\" /></Button>\r\n\r\n                <PanelBoard\r\n                    data={this.state.jobsData}\r\n                />\r\n                <ToastContainer\r\n                    hideProgressBar={true}\r\n                    newestOnTop={true}\r\n                    autoClose={3000}\r\n                />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nclass PanelBoard extends Component {\r\n\r\n    render(){\r\n        const jobs = this.props.data.map((job) => (\r\n\r\n            <JobsPanel\r\n              id={job.id}\r\n              key={job.id}\r\n              title={job.title}\r\n              company={job.company}\r\n              location={job.location}\r\n              created={job.created_at}\r\n              type={job.type}\r\n              url={job.url}\r\n              description={job.description}\r\n             \r\n            />\r\n            // console.log(repo.name)\r\n          ));\r\n\r\n          return(\r\n                <div>\r\n                    {jobs}\r\n                </div>\r\n          );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport JobsSearch from './Jobs/JobsSearch';\r\n\r\nclass Jobs extends Component {\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <JobsSearch />\r\n            </div>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default Jobs;","import React, { Component } from 'react';\r\nimport SearchBar from './Components/SearchBar'\r\nimport Header from './Components/Header'\r\nimport Jobs from './Components/Jobs'\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-2\"></div>\r\n              <div className=\"col-md-8\">\r\n\r\n                  <Route exact path=\"/react-github/\" component={SearchBar} />\r\n                  {/* <SearchBar /> */}\r\n\r\n                  <Route exact path=\"/react-github/jobs/\" component={Jobs} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}